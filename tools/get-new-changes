#!/bin/bash

# this script will show the commits on our repo (but not from
# upstream) since the last_commit_checked; this is handy to update the
# content/en/docs/comparsion/misskey.md file

# set up a set of git clones like this:
#
# git clone -o sharkey -b stable https://git.joinsharkey.org/Sharkey/Sharkey.git
# cd Sharkey
# git remote add misskey https://github.com/misskey-dev/misskey.git
# git remote update -p
# cd ..
# git clone -o sharkey -b stable https://git.joinsharkey.org/Sharkey/sfm.js
# cd sfm.js
# git remote add misskey https://github.com/misskey-dev/mfm.js.git
# git remote update -p
# cd ..

# run this program from the root of that clone, update the comparison
# document, edit `last_commit_checked` to contain the lines that the
# script printed at the end, commit all the changes

declare -A last_commit_checked=(
  ["Sharkey"]=a67d31c963df2c9cde05bddf106bd8a95958f17e
  ["sfm.js"]=4b44cf6021118520b3bd8d7fa8fe15b01b890c29
)

log_cmd=( git log -u -b --word-diff=color --word-diff-regex='[[:alnum:]_]+|[^[:space:]]' --no-merges )

for repo in "${!last_commit_checked[@]}"; do
  ( cd "$repo"; exec "${log_cmd[@]}" sharkey/develop ^misskey/develop ^"${last_commit_checked[$repo]}"; )
done

for repo in "${!last_commit_checked[@]}"; do
  ( cd "$repo"; echo "[\"$repo\"]=$(git rev-parse HEAD)" )
done
